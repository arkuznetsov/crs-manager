#Использовать crs-api

// TODO: нужно нормально рассортировать по модулям

Функция СписокПользователейПоХранилищу(Хранилище) Экспорт
	
	Если Хранилище = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;

	КлиентХранилища = НовыйКлиентХранилища(Хранилище);
	Если КлиентХранилища = Неопределено Тогда
		Сообщить("Не удалось подключиться к хранилищу " + Хранилище.Ссылка + " по причине: " + ОписаниеОшибки());
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат КлиентХранилища.СписокПользователей();
	
КонецФункции

Функция НовыйКлиентХранилища(ХранилищеКонфигурации) Экспорт
	
	АдресХранилища = ХранилищеКонфигурации.Ссылка;
	Пространство = ПространствоХранилищаПоСсылке(АдресХранилища);
	АдресСервера = АдресХранилища;
	Если СтрДлина(Пространство) > 0 Тогда
		АдресСервера = Лев(АдресСервера, СтрДлина(АдресСервера) - СтрДлина(Пространство) - 1);
	КонецЕсли;

	КлиентХранилища = Новый КлиентХранилища(АдресСервера, ХранилищеКонфигурации.ВерсияПлатформы);
	Попытка
		Если Не ПустаяСтрока(Пространство) Тогда
			КлиентХранилища.Подключиться(ХранилищеКонфигурации.Пользователь, ХранилищеКонфигурации.Пароль, Пространство);
		Иначе
			КлиентХранилища.Подключиться(ХранилищеКонфигурации.Пользователь, ХранилищеКонфигурации.Пароль);
		КонецЕсли;
	Исключение
		Сообщить("error");
		Возврат Неопределено;
	КонецПопытки;

	Возврат КлиентХранилища;

КонецФункции

Функция ПространствоХранилищаПоСсылке(Знач Ссылка)

	ПозицияСпецСтроки = СтрНайти(Ссылка, ".1ccr");
	Если ПозицияСпецСтроки > 0 Тогда
		Пространство = Сред(Ссылка, ПозицияСпецСтроки + 6, СтрДлина(Ссылка) - ПозицияСпецСтроки);
	Иначе
		Ссылка = СтрЗаменить(Ссылка, "http://", "");
		Ссылка = СтрЗаменить(Ссылка, "https://", "");

		ПозицияСлеша = СтрНайти(Ссылка, "/");
		Если ПозицияСлеша > 0 Тогда
			Пространство = Сред(Ссылка, ПозицияСлеша + 1, СтрДлина(Ссылка) - ПозицияСлеша);
		Иначе
			Пространство = "";
		КонецЕсли;	
	КонецЕсли;

	Возврат Пространство;
	
КонецФункции

Функция ХранилищеКонфигурацииПоИд(Знач Идентификатор) Экспорт
	
	Если Идентификатор = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Значение = Идентификатор;
	Если ТипЗнч(Значение) = Тип("Строка") Тогда
		Значение = Число(Идентификатор);
	КонецЕсли;
	
	Отбор = Новый Соответствие;
	Отбор.Вставить("Идентификатор", Значение);
	
	Возврат МенеджерБазДанных.МенеджерСущностей.ПолучитьОдно(Тип("ХранилищеКонфигурации"), Отбор);
	
КонецФункции

Функция МодельСтраницы(Знач Заголовок) Экспорт
	Модель = Новый Структура;
	Модель.Вставить("Заголовок", Заголовок);
	Возврат Модель;
КонецФункции

Функция СписокХранилищКонфигурации() Экспорт
	Возврат МенеджерБазДанных.МенеджерСущностей.Получить(Тип("ХранилищеКонфигурации"));
КонецФункции

Функция СписокВерсийПоХранилищу(Хранилище) Экспорт

	Если Хранилище = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;

	КлиентХранилища = НовыйКлиентХранилища(Хранилище);
	Если КлиентХранилища = Неопределено Тогда
		Сообщить("Не удалось подключиться к хранилищу " + Хранилище.Ссылка + " по причине: " + ОписаниеОшибки());
		Возврат Новый Массив;
	КонецЕсли;

	Возврат КлиентХранилища.СписокВерсий();

КонецФункции

Функция ЭтоСлужебныйПользовательХранилища(Хранилище, Знач ИдентификаторПроверяемогоПользователя) Экспорт

	Если Хранилище = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	КлиентХранилища = НовыйКлиентХранилища(Хранилище);
	Если КлиентХранилища = Неопределено Тогда
		Сообщить("Не удалось подключиться к хранилищу " + Хранилище.Ссылка + " по причине: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецЕсли;

	Пользователь = КлиентХранилища.НайтиПользователя(Хранилище.Пользователь);
	Если Пользователь = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Пользователь.Идентификатор = ИдентификаторПроверяемогоПользователя;

КонецФункции

Функция НайтиПользователяПоИдентификатору(Хранилище, ИдентификаторПользователя) Экспорт
	Пользователь = Неопределено;
	СписокПользователей = ОбщегоНазначения.СписокПользователейПоХранилищу(Хранилище);
	Для Каждого ПользовательИзСписка Из СписокПользователей Цикл
		Если ПользовательИзСписка.Идентификатор = ИдентификаторПользователя Тогда
			Пользователь = ПользовательИзСписка;
			Прервать;	
		КонецЕсли;
	КонецЦикла;
	Возврат Пользователь;
КонецФункции

Функция ИдентификаторХранилищаИзКонтроллера(Контроллер) Экспорт
	ИдентификаторХранилища = Контроллер.ЗначенияМаршрута.Получить("repo");
	Если ИдентификаторХранилища <> Неопределено Тогда
		ИдентификаторХранилища = Число(ИдентификаторХранилища);	
	КонецЕсли;
	Возврат ИдентификаторХранилища;
КонецФункции

Функция СоответствиеРолейХранилища() Экспорт
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("ТолькоПросмотр", РолиХранилища.ТолькоПросмотр);
	Соответствие.Вставить("Разработчик", РолиХранилища.Разработчик);
	Соответствие.Вставить("РазработчикРасширенный", РолиХранилища.РазработчикРасширенный);
	Соответствие.Вставить("Администратор", РолиХранилища.Администратор);
	Возврат Соответствие;
КонецФункции