Перем ТекстШаблонаОбъектаДекоратора;
Перем ТекстШаблонаМетодаДекоратора;
Перем ТекстШаблонаПользовательскогоМетода;

// Текст шаблона с содержимым сценария декоратора
//
//  Возвращаемое значение:
//   Строка - Текст сценария
//
Функция ТекстШаблонаОбъектаДекоратора() Экспорт
	Если ТекстШаблонаОбъектаДекоратора = Неопределено Тогда
		ТекстШаблонаОбъектаДекоратора = ПрочитатьТекстШаблона("ШаблонДекоратора.os");
	КонецЕсли;
	
	Возврат ТекстШаблонаОбъектаДекоратора;
КонецФункции

Функция ТекстШаблонаМетодаДекоратора() Экспорт
	Если ТекстШаблонаМетодаДекоратора = Неопределено Тогда
		ТекстШаблонаМетодаДекоратора = ПрочитатьТекстШаблона("ШаблонМетодаДекоратора.os_template");
	КонецЕсли;
	
	Возврат ТекстШаблонаМетодаДекоратора;
КонецФункции

Функция ТекстШаблонаПользовательскогоМетода() Экспорт
	Если ТекстШаблонаПользовательскогоМетода = Неопределено Тогда
		ТекстШаблонаПользовательскогоМетода = ПрочитатьТекстШаблона("ШаблонМетода.os_template");
	КонецЕсли;
	
	Возврат ТекстШаблонаПользовательскогоМетода;
КонецФункции

Функция ПрочитатьТекстШаблона(ИмяШаблона)
	КаталогТекущегоСценария = ТекущийСценарий().Каталог;
	ПутьКШаблонуДекоратора = ОбъединитьПути(
		КаталогТекущегоСценария,
		"..",
		"Классы",
		ИмяШаблона
	);
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ПутьКШаблонуДекоратора, КодировкаТекста.UTF8NoBom);
	ТекстШаблонаДекоратора = ТекстовыйДокумент.ПолучитьТекст();
	ТекстовыйДокумент = Неопределено;
	
	Возврат ТекстШаблонаДекоратора;
КонецФункции
