#Использовать asserts
#Использовать sql

Перем юТест;

Функция ПолучитьТекстИзФайла(ИмяФайла)
    ФайлОбмена = Новый Файл(ИмяФайла);
    Данные = "";
    Если ФайлОбмена.Существует() Тогда
        Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
        Данные = Текст.Прочитать();
        Текст.Закрыть();
    Иначе
        Возврат Ложь;
    КонецЕсли;
    возврат Данные;
КонецФункции

Процедура Инициализация()
КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт

	СуфикМетодов = "";
	СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");
	Если СтрокаСоединения = Ложь Тогда
		СуфикМетодов = "НетПараметровСоединения";
	КонецЕсли;


	юТест = Тестирование;

	СписокТестов = Новый Массив;
	СписокТестов.Добавить("Тест_Должен_ПроверитьСоединение" + СуфикМетодов);
	СписокТестов.Добавить("Тест_Должен_СоздатьТаблицу" + СуфикМетодов);
	СписокТестов.Добавить("Тест_Должен_ДобавитьСтроки" + СуфикМетодов);
	СписокТестов.Добавить("Тест_Должен_ДолженИзменитьСтроки" + СуфикМетодов);
	СписокТестов.Добавить("Тест_Должен_ДолженПолучитьВыборку" + СуфикМетодов);
	СписокТестов.Добавить("Тест_Должен_ДолженПроверитьТаймаут" + СуфикМетодов);

	Возврат СписокТестов;

КонецФункции

Процедура Тест_Должен_ПроверитьСоединение() Экспорт
		СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");
	
		Соединение = Новый Соединение();
		Соединение.ТипСУБД = Соединение.ТипыСУБД.MSSQLServer;
		Соединение.СтрокаСоединения = СтрокаСоединения;
	
		Результат = Соединение.Открыть();

		Ожидаем.Что(Результат).Равно(Результат);

		Соединение.Закрыть();
		
КонецПроцедуры

Процедура Тест_Должен_СоздатьТаблицу() Экспорт
	
	СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");

	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.MSSQLServer;
	Соединение.СтрокаСоединения = СтрокаСоединения;

	Соединение.Открыть();
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "Create table #users (id integer, name varchar(50))";
	ЗапросВставка.ВыполнитьКоманду();
	
	Соединение.Закрыть();

КонецПроцедуры

Процедура Тест_Должен_ДобавитьСтроки() Экспорт
	
	СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");

	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.MSSQLServer;
	Соединение.СтрокаСоединения = СтрокаСоединения;
	Соединение.Открыть();

	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "Create table #users (id integer, name varchar(50))";
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "insert into #users (name) values(@name)";
	ЗапросВставка.УстановитьПараметр("name", "Сергей");
	Результат = ЗапросВставка.ВыполнитьКоманду();

	Соединение.Закрыть();

	Ожидаем.Что(Результат).Равно(1);

КонецПроцедуры

Процедура Тест_Должен_ДолженИзменитьСтроки() Экспорт
	
	СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");

	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.MSSQLServer;
	Соединение.СтрокаСоединения = СтрокаСоединения;
	Соединение.Открыть();

	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = "Create table #users (id integer, name varchar(50))";
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "insert into #users (id, name) values(1, @name)";
	ЗапросВставка.УстановитьПараметр("name", "Сергей");
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "update #users set name = @name";
	ЗапросВставка.УстановитьПараметр("name", "Сергей Александрович");
	Результат = ЗапросВставка.ВыполнитьКоманду();

	Соединение.Закрыть();

	Ожидаем.Что(Результат).Равно(1);

КонецПроцедуры


Процедура Тест_Должен_ДолженПолучитьВыборку() Экспорт

	СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");

	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.MSSQLServer;
	Соединение.СтрокаСоединения = СтрокаСоединения;
	Соединение.Открыть();

	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);

	ЗапросВставка.Текст = "IF OBJECT_ID(N'#users', N'U') IS NOT NULL DROP TABLE #users;";
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "Create table #users (id integer, name varchar(50), born date)";
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "insert into #users (id, name, born) values(@id, @name, @born)";
	ЗапросВставка.Параметры.Очистить();
	ЗапросВставка.УстановитьПараметр("id", 1);
	ЗапросВставка.УстановитьПараметр("name", "Сергей");
	ЗапросВставка.УстановитьПараметр("born", Дата(1980,9,13));
	ЗапросВставка.ВыполнитьКоманду();
	
	ЗапросВставка.Текст = "select * from #users WHERE id = @id";
	// ЗапросВставка.Текст = "select * from users";
	ЗапросВставка.Параметры.Очистить();
	ЗапросВставка.УстановитьПараметр("id", 1);
	Рез = ЗапросВставка.Выполнить();
	ТЗ = Рез.Выгрузить();

	// Для каждого СтрТЗ Из ТЗ Цикл
	// 	Сообщить("id:" +СтрТЗ.id);
	// 	Сообщить("name:" + СтрТЗ.name);
	// 	Сообщить("born:" + СтрТЗ.born);
	// КонецЦикла;

	Ожидаем.Что(ТЗ.Количество()).Равно(1);

	Соединение.Закрыть();

КонецПроцедуры

Процедура Тест_Должен_ДолженПроверитьТаймаут() Экспорт

	СтрокаСоединения = ПолучитьТекстИзФайла("fixtures\ms-sql-server-con-str.txt");

	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.MSSQLServer;
	Соединение.СтрокаСоединения = СтрокаСоединения;
	Соединение.Открыть();

	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Таймаут = 1;

	ЗапросВставка.Текст = "Create table #users (id integer, name varchar(50))";
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "insert into #users (id, name) values(1, @name)";
	ЗапросВставка.УстановитьПараметр("name", "Сергей");
	ЗапросВставка.ВыполнитьКоманду();

	ЗапросВставка.Текст = "update #users set name = @name";
	ЗапросВставка.УстановитьПараметр("name", "Сергей Александрович");
	Результат = ЗапросВставка.ВыполнитьКоманду();

	Соединение.Закрыть();

	Ожидаем.Что(Результат).Равно(1);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

Инициализация();
