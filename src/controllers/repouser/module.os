#Использовать "../../model"
#Использовать crs-api

Перем ЗаголовокСписка;
Перем ЗаголовокЗаписи;
Перем ЗаголовокНовойЗаписи;

#Область ПрограммныйИнтерфейс

// Обработчик действия index (список пользователей)
//
Функция Index() Экспорт
	
	ИдентификаторХранилища = ОбщегоНазначения.ИдентификаторХранилищаИзКонтроллера(ЭтотОбъект);
	ХранилищеКонфигурации = ОбщегоНазначения.ХранилищеКонфигурацииПоИд(ИдентификаторХранилища);
	СписокХранилищКонфигурации = ОбщегоНазначения.СписокХранилищКонфигурации();
	
	Если ИдентификаторХранилища = Неопределено И СписокХранилищКонфигурации.Количество() > 0 Тогда
		Возврат Перенаправление(СтрШаблон("/%1/repouser", СписокХранилищКонфигурации[0].Идентификатор));
	КонецЕсли;
	
	Модель = ОбщегоНазначения.МодельСтраницы(ЗаголовокСписка);
	Модель.Вставить("Хранилища", СписокХранилищКонфигурации);
	Модель.Вставить("ТекущееХранилище", ИдентификаторХранилища);
	Модель.Вставить("ПользовательХранилища", Неопределено);
	Если Не ХранилищеКонфигурации = Неопределено Тогда
		Модель.ПользовательХранилища = ХранилищеКонфигурации.Пользователь;
	КонецЕсли;
	
	Модель.Вставить("Список", ОбщегоНазначения.СписокПользователейПоХранилищу(ХранилищеКонфигурации));	
	Возврат Представление("page", Модель);
	
КонецФункции

// Обработчик действия save (записать пользователя (новый или существующий))
//
Функция Save() Экспорт
	
	ИдентификаторХранилища = ОбщегоНазначения.ИдентификаторХранилищаИзКонтроллера(ЭтотОбъект);
	ХранилищеКонфигурации = ОбщегоНазначения.ХранилищеКонфигурацииПоИд(ИдентификаторХранилища);
	
	Если ЭтотОбъект.ЗапросHTTP.Метод = "POST" Тогда
		
		КлиентХранилища = ОбщегоНазначения.НовыйКлиентХранилища(ХранилищеКонфигурации);
		Если КлиентХранилища = Неопределено Тогда
			Возврат Неопределено; // fixme: нужно вернуть ошибку
		КонецЕсли;
		
		МодельЗаписи = МодельЗаписи();
		ЗаполнитьМодельЗаписиИзДанныхФормы(МодельЗаписи);
		
		Если ЗначениеЗаполнено(МодельЗаписи.ИдентификаторПользователя) Тогда
			Пользователь = КлиентХранилища.НайтиПользователя(МодельЗаписи.ИмяПользователя);
			Если Пользователь <> Неопределено Тогда
				Пользователь.Имя = МодельЗаписи.ИмяПользователя;
				Если ЗначениеЗаполнено(МодельЗаписи.ПарольПользователя) Тогда
					Пользователь.Пароль = МодельЗаписи.ПарольПользователя;
				КонецЕсли;
				Пользователь.Роль = МодельЗаписи.Права;
				КлиентХранилища.ОбновитьПользователяХранилища(Пользователь);
			КонецЕсли;
			Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
		КонецЕсли;
		
		КлиентХранилища.СоздатьПользователя(МодельЗаписи.ИмяПользователя, МодельЗаписи.ПарольПользователя, МодельЗаписи.Права);
		
		Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
		
	КонецЕсли;
	
	Модель = ОбщегоНазначения.МодельСтраницы(ЗаголовокНовойЗаписи);
	Модель.Вставить("Запись", МодельЗаписи());
	Модель.Запись.Хранилище = ИдентификаторХранилища;
	Модель.Вставить("ТекущееХранилище", ИдентификаторХранилища);
	
	Возврат Представление("element", Модель);
	
КонецФункции

// Обработчик действия element (открытие формы существующего пользователя или для создания нового)
//
Функция Element() Экспорт
	
	ИдентификаторПользователя = ЭтотОбъект.ЗначенияМаршрута.Получить("id");
	ИдентификаторХранилища = ОбщегоНазначения.ИдентификаторХранилищаИзКонтроллера(ЭтотОбъект);
	Хранилище = ОбщегоНазначения.ХранилищеКонфигурацииПоИд(ИдентификаторХранилища);
	Пользователь = ОбщегоНазначения.НайтиПользователяПоИдентификатору(Хранилище, ИдентификаторПользователя);
	СоответствиеРолейХранилища = ОбщегоНазначения.СоответствиеРолейХранилища();

	Запись = МодельЗаписи();
	Запись.Хранилище = Хранилище.Имя;
	Если Пользователь <> Неопределено Тогда
		Запись.ИдентификаторПользователя = Пользователь.Идентификатор;
		Запись.ИмяПользователя = Пользователь.Имя;
		Запись.Права = Пользователь.Роль; 
	КонецЕсли;
	
	Модель = ОбщегоНазначения.МодельСтраницы(ЗаголовокЗаписи);
	Модель.Вставить("Запись", Запись);
	Модель.Вставить("ТекущееХранилище", ИдентификаторХранилища);
	Если Пользователь = Неопределено  Тогда
		Модель.Вставить("ЗаголовокЗаписи", "Новая запись");
	Иначе
		Модель.Вставить("ЗаголовокЗаписи", "Существующая запись");
	КонецЕсли;
	Модель.Вставить("СоответствиеРолейХранилища", СоответствиеРолейХранилища);
	
	Возврат Представление("element", Модель);
КонецФункции

// Обработчик действия enable (восстановить пользователя)
//
Функция Enable() Экспорт
	
	ИдентификаторПользователя = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["Идентификатор"];
	
	Если Не ЗначениеЗаполнено(ИдентификаторПользователя) Тогда
		Возврат Перенаправление("/repouser");
	КонецЕсли;
	
	ИдентификаторХранилища = ЭтотОбъект.ЗначенияМаршрута.Получить("repo");
	Хранилище = ОбщегоНазначения.ХранилищеКонфигурацииПоИд(ИдентификаторХранилища);
	
	Если Хранилище = Неопределено Тогда
		Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
	КонецЕсли; 
	
	Если ОбщегоНазначения.ЭтоСлужебныйПользовательХранилища(Хранилище, ИдентификаторПользователя) Тогда
		Сообщить("Запрещено изменять состояние служебного пользователя");
		Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
	КонецЕсли;
	
	Попытка
		ИнтеграцияСХранилищем1С.ВосстановитьПользователя(Хранилище, ИдентификаторПользователя);
	Исключение
		Сообщить("Не удалось активировать пользователя. Причина: " + ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
	
КонецФункции

// Обработчик действия disable (деактивировать пользователя)
//
Функция Disable() Экспорт
	
	ИдентификаторПользователя = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["Идентификатор"];
	
	Если Не ЗначениеЗаполнено(ИдентификаторПользователя) Тогда
		Возврат Перенаправление("/repouser");
	КонецЕсли;
	
	ИдентификаторХранилища = ЭтотОбъект.ЗначенияМаршрута.Получить("repo");
	Хранилище = ОбщегоНазначения.ХранилищеКонфигурацииПоИд(ИдентификаторХранилища);
	
	Если Хранилище = Неопределено Тогда
		Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
	КонецЕсли; 
	
	Если ОбщегоНазначения.ЭтоСлужебныйПользовательХранилища(Хранилище, ИдентификаторПользователя) Тогда
		Сообщить("Запрещено изменять состояние служебного пользователя");
		Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
	КонецЕсли;
	
	Попытка
		ИнтеграцияСХранилищем1С.ДеактивироватьПользователя(Хранилище, ИдентификаторПользователя);
	Исключение
		Сообщить("Не удалось деактивировать пользователя. Причина: " + ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Перенаправление(СтрШаблон("/%1/repouser", ИдентификаторХранилища));
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МодельЗаписи()
	Запись = Новый Структура;
	Запись.Вставить("ИдентификаторПользователя", "");
	Запись.Вставить("Хранилище", "");
	Запись.Вставить("ИмяПользователя", "");
	Запись.Вставить("ПарольПользователя", "");
	Запись.Вставить("Права", "");
	Возврат Запись;
КонецФункции

Процедура ЗаполнитьМодельЗаписиИзДанныхФормы(МодельЗаписи)
	МодельЗаписи.ИдентификаторПользователя = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["ИдентификаторПользователя"];
	МодельЗаписи.Хранилище = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["Хранилище"];
	МодельЗаписи.ИмяПользователя = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["ИмяПользователя"];
	МодельЗаписи.ПарольПользователя = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["ПарольПользователя"];
	МодельЗаписи.Права = ЭтотОбъект.ЗапросHTTP.ДанныеФормы["Права"];
КонецПроцедуры

#КонецОбласти

ЗаголовокСписка = "Список пользователей";
ЗаголовокЗаписи = "Пользователь хранилища";
ЗаголовокНовойЗаписи = "Пользователь хранилища";