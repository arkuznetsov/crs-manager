#Использовать "../../model"
#Использовать crs-api

Функция Index() Экспорт
	
	Модель = Новый Структура;
	Модель.Вставить("Заголовок", "Хранилища конфигураций");
	Модель.Вставить("Список", Новый Массив);
	
	Результат = МенеджерБазДанных.МенеджерСущностей.Получить(Тип("ХранилищеКонфигурации"));
	Для Каждого Запись Из Результат Цикл
		Строка = ШаблонЗаписи();
		ЗаполнитьЗначенияСвойств(Строка, Запись);
		Модель.Список.Добавить(Строка);
	КонецЦикла;
	
	Возврат Представление("page", Модель);

КонецФункции

Функция Save() Экспорт

	Запись = Неопределено;

	Если ВРег(ЗапросHTTP.Метод) = "POST" Тогда
		
		Если ЗначениеЗаполнено(ЗапросHTTP.ДанныеФормы["Идентификатор"]) Тогда

			Отбор = Новый Соответствие();
			Отбор.Вставить("Идентификатор", Число(ЗапросHTTP.ДанныеФормы["Идентификатор"]));
	
			СуществующиеЗаписи = МенеджерБазДанных.МенеджерСущностей.Получить(Тип("ХранилищеКонфигурации"),
			                                                                  Отбор);

			Если СуществующиеЗаписи.Количество() > 0 Тогда
				Запись = СуществующиеЗаписи[0];
			КонецЕсли;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Запись) Тогда
			Запись = Новый ХранилищеКонфигурации();
		КонецЕсли;

		Если ЗначениеЗаполнено(ЗапросHTTP.ДанныеФормы["Пароль"]) Тогда
			ХешПароля = ХешированныйПароль(ЗапросHTTP.ДанныеФормы["Пароль"]);
		КонецЕсли;

		Запись.Идентификатор   = ЗапросHTTP.ДанныеФормы["Идентификатор"];
		Запись.Имя             = ЗапросHTTP.ДанныеФормы["Имя"];
		Запись.Ссылка          = ЗапросHTTP.ДанныеФормы["Ссылка"];
		Запись.ВерсияПлатформы = ЗапросHTTP.ДанныеФормы["ВерсияПлатформы"];
		Запись.Пользователь    = ЗапросHTTP.ДанныеФормы["Пользователь"];
		Запись.ХешПароля       = ХешПароля;
		Запись.Комментарий     = ЗапросHTTP.ДанныеФормы["Комментарий"];

		МенеджерБазДанных.МенеджерСущностей.Сохранить(Запись);

	КонецЕсли;

	Модель = Новый Структура;
	Модель.Вставить("Заголовок", "Хранилище конфигурации");
	Модель.Вставить("Запись", "Хранилище конфигурации");
	
	Возврат Index();

КонецФункции

Функция Add() Экспорт

	Запись = ШаблонЗаписи();

	Модель = Новый Структура;
	Модель.Вставить("Заголовок", "Хранилища конфигураций");
	Модель.Вставить("Запись"   , Запись);
	
	Возврат Представление("element", Модель);

КонецФункции

Функция Edit() Экспорт

	Запись = ШаблонЗаписи();

	Если ВРег(ЗапросHTTP.Метод) = "POST" Тогда
		
		Отбор = Новый Соответствие();
		Отбор.Вставить("Идентификатор", Число(ЗапросHTTP.ДанныеФормы["Идентификатор"]));

		Результат = МенеджерБазДанных.МенеджерСущностей.ПолучитьОдно(Тип("ХранилищеКонфигурации"), Отбор);

		ЗаполнитьЗначенияСвойств(Запись, Результат);
	КонецЕсли;

	Модель = Новый Структура;
	Модель.Вставить("Заголовок", "Хранилища конфигураций");
	Модель.Вставить("Запись"   , Запись);

	Возврат Представление("element", Модель);

КонецФункции

Функция Remove() Экспорт

	Если ВРег(ЗапросHTTP.Метод) = "POST" Тогда
		
		Если ЗначениеЗаполнено(ЗапросHTTP.ДанныеФормы["Идентификатор"]) Тогда

			Отбор = Новый Соответствие();
			Отбор.Вставить("Идентификатор", Число(ЗапросHTTP.ДанныеФормы["Идентификатор"]));
	
			СуществующиеЗаписи = МенеджерБазДанных.МенеджерСущностей.Получить(Тип("ХранилищеКонфигурации"),
			                                                                  Отбор);

			Если СуществующиеЗаписи.Количество() > 0 Тогда
				МенеджерБазДанных.МенеджерСущностей.Удалить(СуществующиеЗаписи[0]);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	Возврат Index();

КонецФункции

Функция ШаблонЗаписи()

	Шаблон = Новый Структура;

	Шаблон.Вставить("Имя");
	Шаблон.Вставить("Идентификатор");
	Шаблон.Вставить("Ссылка");
	Шаблон.Вставить("ВерсияПлатформы");
	Шаблон.Вставить("Пользователь");
	Шаблон.Вставить("ХешПароля");
	// Шаблон.Вставить("Пароль");
	Шаблон.Вставить("Комментарий");

	Возврат Шаблон;

КонецФункции

// Хеширует строку по "стандартам" хеширования хранилища 1С.
// Метод используется для хеширования паролей пользователей хранилищ 1С.
//
// Параметры:
//   ВходящееЗначение - Строка - значениие для хеширования
//
//  Возвращаемое значение:
//   Строка - хешированная строка
//
Функция ХешированныйПароль(Знач ВходящееЗначение)
	Данные = ПолучитьДвоичныеДанныеИзСтроки(ВходящееЗначение, КодировкаТекста.UTF16, Ложь);
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
	ХешированиеДанных.Добавить(Данные);
	Возврат НРег(ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма));
КонецФункции

